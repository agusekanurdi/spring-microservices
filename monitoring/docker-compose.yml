version: '3.1'
services:
  monitoring-storage:
    image: openzipkin/zipkin-mysql
    container_name: mysql
    # Uncomment to expose the storage port for testing
    # ports:
    #   - 3306:3306

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/tree/1.19.0/zipkin-server#environment-variables
    environment:
    - STORAGE_TYPE=mysql
    # Point the zipkin at the storage backend
    - MYSQL_HOST=mysql
    # Uncomment to enable scribe
    # - SCRIBE_ENABLED=true
    # Uncomment to enable self-tracing
    # - SELF_TRACING_ENABLED=true
    # Uncomment to enable debug logging
    # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG -Dlogging.level.zipkin2=DEBUG
    ports:
    # Port used for the Zipkin UI and HTTP Api
    - 9411:9411
    # Uncomment if you set SCRIBE_ENABLED=true
    # - 9410:9410
    depends_on:
    - monitoring-storage

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: zipkin-dependencies
    entrypoint: crond -f
    environment:
    - STORAGE_TYPE=mysql
    - MYSQL_HOST=mysql
    # Add the baked-in username and password for the zipkin-mysql image
    - MYSQL_USER=zipkin
    - MYSQL_PASS=zipkin
    # Uncomment to see dependency processing logs
    # - ZIPKIN_LOG_LEVEL=DEBUG
    # Uncomment to adjust memory used by the dependencies job
    # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
    - monitoring-storage

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
    - 3000:3000
    volumes:
    - ./grafana_data:/var/lib/grafana
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=monitoring
    - GF_SECURITY_ADMIN_USER=admin
    - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
    - prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
    - 9090:9090
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - ./prometheus_data:/prometheus
    command:
    - --config.file=/etc/prometheus/prometheus.yml
volumes:
  prometheus_data: {}
  grafana_data: {}